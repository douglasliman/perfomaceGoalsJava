package ecommerce.controller;

import ecommerce.model.Produto;
import ecommerce.repository.ProdutoRepository;

import java.util.HashSet;
import java.util.Optional;
import java.util.Set;

public class ProdutoController implements ProdutoRepository {

    private Set<Produto> produtos;

    public ProdutoController() {
        this.produtos = new HashSet<>();
    }

    @Override
    public void adicionarEstoque(int idProduto, int quantidade) {
        Optional<Produto> optionalProduto = buscarProdutoPorId(idProduto);
        if (optionalProduto.isPresent()) {
            Produto produto = optionalProduto.get();
            produto.adicionarEstoque(quantidade);
            atualizarDadosProduto(produto);
        }
    }

    @Override
    public boolean removerEstoque(int idProduto, int quantidade) {
        Optional<Produto> optionalProduto = buscarProdutoPorId(idProduto);
        if (optionalProduto.isPresent()) {
            Produto produto = optionalProduto.get();
            Optional<Integer> quantidadeRemovida = produto.removerEstoque(quantidade);
            if (quantidadeRemovida.isPresent()) {
                atualizarDadosProduto(produto);
                return true;
            }
        }
        return false;
    }

    @Override
    public int consultarEstoque(int idProduto) {
        Optional<Produto> optionalProduto = buscarProdutoPorId(idProduto);
        return optionalProduto.map(Produto::getEstoque).orElse(0);
    }

    @Override
    public void cadastrarNovoProduto(Produto produto) {
        produtos.add(produto);
    }

    @Override
    public void atualizarDadosProduto(Produto produto) {
        produtos.removeIf(p -> p.getId() == produto.getId());
        produtos.add(produto);
    }

    @Override
    public void removerProduto(int idProduto) {
        produtos.removeIf(p -> p.getId() == idProduto);
    }

    @Override
    public Optional<Produto> buscarProdutoPorId(int idProduto) {
        return produtos.stream().filter(p -> p.getId() == idProduto).findFirst();
    }

    @Override
    public Set<Produto> buscarTodosProdutos() {
        return produtos;
    }
}
